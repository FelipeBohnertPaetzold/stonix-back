buildscript {
    ext {
        springBootVersion = "1.4.1.RELEASE"
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
	classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "net.saliman.cobertura" version "2.3.1"
    id "com.github.kt3k.coveralls" version "2.6.3"
}

cobertura.coverageFormats = ["html", "xml"]

apply plugin: "io.spring.dependency-management"
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "spring-boot"
apply plugin: "war"

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

war {
    baseName = "stonix"
    version = "0.0.4"
}

jar {
    baseName = "stonix"
    version = "0.0.4-SNAPSHOT"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    def GUAVA_VERSION = '19.0'
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "com.google.guava:guava:$GUAVA_VERSION"
    compile "org.liquibase:liquibase-core"
    compile group: 'mysql', name: 'mysql-connector-java'

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

configurations {
    providedRuntime
}

processResources {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            activeProfiles: project.properties['activeProfiles'] ?: "development"
    ]
}

eclipse {
    classpath {
        containers.remove "org.eclipse.jdt.launching.JRE_CONTAINER"
        containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

/*
            TASKS
  */

task production << {
    apply from: rootProject.file('build-prod.gradle');
}

task development << {
    apply from: rootProject.file('build-dev.gradle');
}

task alltests << {
    apply from: rootProject.file('build-test.gradle');
}
